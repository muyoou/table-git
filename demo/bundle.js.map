{
  "version": 3,
  "sources": ["crypto-shim.js", "../node_modules/js-sha1/src/sha1.js", "../src/utils/hash.ts", "../src/core/cell.ts", "../src/core/structure.ts", "../src/core/sheet.ts", "../src/core/commit.ts", "../src/core/table-git.ts", "../src/utils/factory.ts", "../src/formatters/adapter.ts", "../src/formatters/function-formatter.ts", "../src/formatters/builtin.ts", "app.ts"],
  "sourcesContent": ["// Minimal SHA-1 implementation for demo bundling (non-constant-time; demo only)\r\nfunction sha1Hex(message) {\r\n  function rotl(n, s) { return (n << s) | (n >>> (32 - s)); }\r\n  function toHex(n) { return ('00000000' + (n >>> 0).toString(16)).slice(-8); }\r\n  const msg = new TextEncoder().encode(String(message));\r\n  const ml = msg.length * 8;\r\n  const withOne = new Uint8Array(((msg.length + 9 + 63) >> 6) << 6);\r\n  withOne.set(msg);\r\n  withOne[msg.length] = 0x80;\r\n  const dv = new DataView(withOne.buffer);\r\n  dv.setUint32(withOne.length - 4, ml >>> 0);\r\n\r\n  let h0 = 0x67452301, h1 = 0xEFCDAB89, h2 = 0x98BADCFE, h3 = 0x10325476, h4 = 0xC3D2E1F0;\r\n  const w = new Uint32Array(80);\r\n  for (let i = 0; i < withOne.length; i += 64) {\r\n    for (let j = 0; j < 16; j++) w[j] = dv.getUint32(i + j * 4);\r\n    for (let j = 16; j < 80; j++) w[j] = rotl(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\r\n    let a = h0, b = h1, c = h2, d = h3, e = h4;\r\n    for (let j = 0; j < 80; j++) {\r\n      const f = j < 20 ? ((b & c) | (~b & d))\r\n        : j < 40 ? (b ^ c ^ d)\r\n        : j < 60 ? ((b & c) | (b & d) | (c & d))\r\n        : (b ^ c ^ d);\r\n      const k = j < 20 ? 0x5A827999 : j < 40 ? 0x6ED9EBA1 : j < 60 ? 0x8F1BBCDC : 0xCA62C1D6;\r\n      const temp = (rotl(a, 5) + f + e + k + w[j]) >>> 0;\r\n      e = d; d = c; c = rotl(b, 30) >>> 0; b = a; a = temp;\r\n    }\r\n    h0 = (h0 + a) >>> 0; h1 = (h1 + b) >>> 0; h2 = (h2 + c) >>> 0; h3 = (h3 + d) >>> 0; h4 = (h4 + e) >>> 0;\r\n  }\r\n  return toHex(h0) + toHex(h1) + toHex(h2) + toHex(h3) + toHex(h4);\r\n}\r\n\r\nexports.createHash = function createHash(algo) {\r\n  if (algo !== 'sha1') throw new Error('Only sha1 supported in demo shim');\r\n  let acc = '';\r\n  return {\r\n    update(chunk) { acc += (typeof chunk === 'string') ? chunk : new TextDecoder().decode(chunk); return this; },\r\n    digest(enc) { const hex = sha1Hex(acc); return enc === 'hex' ? hex : Buffer.from(hex, 'hex'); }\r\n  };\r\n};\r\n", "/*\n * [js-sha1]{@link https://github.com/emn178/js-sha1}\n *\n * @version 0.7.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2024\n * @license MIT\n */\n/*jslint bitwise: true */\n(function() {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA1_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA1_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA1_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA1_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var EXTRA = [-2147483648, 8388608, 32768, 128];\n  var SHIFT = [24, 16, 8, 0];\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'arrayBuffer'];\n\n  var blocks = [];\n\n  var isArray = Array.isArray;\n  if (root.JS_SHA1_NO_NODE_JS || !isArray) {\n    isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  var isView = ArrayBuffer.isView;\n  if (ARRAY_BUFFER && (root.JS_SHA1_NO_ARRAY_BUFFER_IS_VIEW || !isView)) {\n    isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  // [message: string, isString: bool]\n  var formatMessage = function (message) {\n    var type = typeof message;\n    if (type === 'string') {\n      return [message, true];\n    }\n    if (type !== 'object' || message === null) {\n      throw new Error(INPUT_ERROR);\n    }\n    if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n      return [new Uint8Array(message), false];\n    }\n    if (!isArray(message) && !isView(message)) {\n      throw new Error(INPUT_ERROR);\n    }\n    return [message, false];\n  }\n\n  var createOutputMethod = function (outputType) {\n    return function (message) {\n      return new Sha1(true).update(message)[outputType]();\n    };\n  };\n\n  var createMethod = function () {\n    var method = createOutputMethod('hex');\n    if (NODE_JS) {\n      method = nodeWrap(method);\n    }\n    method.create = function () {\n      return new Sha1();\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type);\n    }\n    return method;\n  };\n\n  var nodeWrap = function (method) {\n    var crypto = require('crypto')\n    var Buffer = require('buffer').Buffer;\n    var bufferFrom;\n    if (Buffer.from && !root.JS_SHA1_NO_BUFFER_FROM) {\n      bufferFrom = Buffer.from;\n    } else {\n      bufferFrom = function (message) {\n        return new Buffer(message);\n      };\n    }\n    var nodeMethod = function (message) {\n      if (typeof message === 'string') {\n        return crypto.createHash('sha1').update(message, 'utf8').digest('hex');\n      } else {\n        if (message === null || message === undefined) {\n          throw new Error(INPUT_ERROR);\n        } else if (message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        }\n      }\n      if (isArray(message) || isView(message) ||\n        message.constructor === Buffer) {\n        return crypto.createHash('sha1').update(bufferFrom(message)).digest('hex');\n      } else {\n        return method(message);\n      }\n    };\n    return nodeMethod;\n  };\n\n  var createHmacOutputMethod = function (outputType) {\n    return function (key, message) {\n      return new HmacSha1(key, true).update(message)[outputType]();\n    };\n  };\n\n  var createHmacMethod = function () {\n    var method = createHmacOutputMethod('hex');\n    method.create = function (key) {\n      return new HmacSha1(key);\n    };\n    method.update = function (key, message) {\n      return method.create(key).update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createHmacOutputMethod(type);\n    }\n    return method;\n  };\n\n  function Sha1(sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n      blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n      blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      this.blocks = blocks;\n    } else {\n      this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n\n    this.h0 = 0x67452301;\n    this.h1 = 0xEFCDAB89;\n    this.h2 = 0x98BADCFE;\n    this.h3 = 0x10325476;\n    this.h4 = 0xC3D2E1F0;\n\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n  }\n\n  Sha1.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n\n    var result = formatMessage(message);\n    message = result[0];\n    var isString = result[1];\n    var code, index = 0, i, length = message.length || 0, blocks = this.blocks;\n\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = this.block;\n        this.block = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n\n      if(isString) {\n        for (i = this.start; index < length && i < 64; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >>> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >>> 2] |= (0xc0 | (code >>> 6)) << SHIFT[i++ & 3];\n            blocks[i >>> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >>> 2] |= (0xe0 | (code >>> 12)) << SHIFT[i++ & 3];\n            blocks[i >>> 2] |= (0x80 | ((code >>> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >>> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >>> 2] |= (0xf0 | (code >>> 18)) << SHIFT[i++ & 3];\n            blocks[i >>> 2] |= (0x80 | ((code >>> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >>> 2] |= (0x80 | ((code >>> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >>> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      } else {\n        for (i = this.start; index < length && i < 64; ++index) {\n          blocks[i >>> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      }\n\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 64) {\n        this.block = blocks[16];\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  };\n\n  Sha1.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >>> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n      if (!this.hashed) {\n        this.hash();\n      }\n      blocks[0] = this.block;\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n      blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n      blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n    blocks[14] = this.hBytes << 3 | this.bytes >>> 29;\n    blocks[15] = this.bytes << 3;\n    this.hash();\n  };\n\n  Sha1.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4;\n    var f, j, t, blocks = this.blocks;\n\n    for(j = 16; j < 80; ++j) {\n      t = blocks[j - 3] ^ blocks[j - 8] ^ blocks[j - 14] ^ blocks[j - 16];\n      blocks[j] =  (t << 1) | (t >>> 31);\n    }\n\n    for(j = 0; j < 20; j += 5) {\n      f = (b & c) | ((~b) & d);\n      t = (a << 5) | (a >>> 27);\n      e = t + f + e + 1518500249 + blocks[j] << 0;\n      b = (b << 30) | (b >>> 2);\n\n      f = (a & b) | ((~a) & c);\n      t = (e << 5) | (e >>> 27);\n      d = t + f + d + 1518500249 + blocks[j + 1] << 0;\n      a = (a << 30) | (a >>> 2);\n\n      f = (e & a) | ((~e) & b);\n      t = (d << 5) | (d >>> 27);\n      c = t + f + c + 1518500249 + blocks[j + 2] << 0;\n      e = (e << 30) | (e >>> 2);\n\n      f = (d & e) | ((~d) & a);\n      t = (c << 5) | (c >>> 27);\n      b = t + f + b + 1518500249 + blocks[j + 3] << 0;\n      d = (d << 30) | (d >>> 2);\n\n      f = (c & d) | ((~c) & e);\n      t = (b << 5) | (b >>> 27);\n      a = t + f + a + 1518500249 + blocks[j + 4] << 0;\n      c = (c << 30) | (c >>> 2);\n    }\n\n    for(; j < 40; j += 5) {\n      f = b ^ c ^ d;\n      t = (a << 5) | (a >>> 27);\n      e = t + f + e + 1859775393 + blocks[j] << 0;\n      b = (b << 30) | (b >>> 2);\n\n      f = a ^ b ^ c;\n      t = (e << 5) | (e >>> 27);\n      d = t + f + d + 1859775393 + blocks[j + 1] << 0;\n      a = (a << 30) | (a >>> 2);\n\n      f = e ^ a ^ b;\n      t = (d << 5) | (d >>> 27);\n      c = t + f + c + 1859775393 + blocks[j + 2] << 0;\n      e = (e << 30) | (e >>> 2);\n\n      f = d ^ e ^ a;\n      t = (c << 5) | (c >>> 27);\n      b = t + f + b + 1859775393 + blocks[j + 3] << 0;\n      d = (d << 30) | (d >>> 2);\n\n      f = c ^ d ^ e;\n      t = (b << 5) | (b >>> 27);\n      a = t + f + a + 1859775393 + blocks[j + 4] << 0;\n      c = (c << 30) | (c >>> 2);\n    }\n\n    for(; j < 60; j += 5) {\n      f = (b & c) | (b & d) | (c & d);\n      t = (a << 5) | (a >>> 27);\n      e = t + f + e - 1894007588 + blocks[j] << 0;\n      b = (b << 30) | (b >>> 2);\n\n      f = (a & b) | (a & c) | (b & c);\n      t = (e << 5) | (e >>> 27);\n      d = t + f + d - 1894007588 + blocks[j + 1] << 0;\n      a = (a << 30) | (a >>> 2);\n\n      f = (e & a) | (e & b) | (a & b);\n      t = (d << 5) | (d >>> 27);\n      c = t + f + c - 1894007588 + blocks[j + 2] << 0;\n      e = (e << 30) | (e >>> 2);\n\n      f = (d & e) | (d & a) | (e & a);\n      t = (c << 5) | (c >>> 27);\n      b = t + f + b - 1894007588 + blocks[j + 3] << 0;\n      d = (d << 30) | (d >>> 2);\n\n      f = (c & d) | (c & e) | (d & e);\n      t = (b << 5) | (b >>> 27);\n      a = t + f + a - 1894007588 + blocks[j + 4] << 0;\n      c = (c << 30) | (c >>> 2);\n    }\n\n    for(; j < 80; j += 5) {\n      f = b ^ c ^ d;\n      t = (a << 5) | (a >>> 27);\n      e = t + f + e - 899497514 + blocks[j] << 0;\n      b = (b << 30) | (b >>> 2);\n\n      f = a ^ b ^ c;\n      t = (e << 5) | (e >>> 27);\n      d = t + f + d - 899497514 + blocks[j + 1] << 0;\n      a = (a << 30) | (a >>> 2);\n\n      f = e ^ a ^ b;\n      t = (d << 5) | (d >>> 27);\n      c = t + f + c - 899497514 + blocks[j + 2] << 0;\n      e = (e << 30) | (e >>> 2);\n\n      f = d ^ e ^ a;\n      t = (c << 5) | (c >>> 27);\n      b = t + f + b - 899497514 + blocks[j + 3] << 0;\n      d = (d << 30) | (d >>> 2);\n\n      f = c ^ d ^ e;\n      t = (b << 5) | (b >>> 27);\n      a = t + f + a - 899497514 + blocks[j + 4] << 0;\n      c = (c << 30) | (c >>> 2);\n    }\n\n    this.h0 = this.h0 + a << 0;\n    this.h1 = this.h1 + b << 0;\n    this.h2 = this.h2 + c << 0;\n    this.h3 = this.h3 + d << 0;\n    this.h4 = this.h4 + e << 0;\n  };\n\n  Sha1.prototype.hex = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4;\n\n    return HEX_CHARS[(h0 >>> 28) & 0x0F] + HEX_CHARS[(h0 >>> 24) & 0x0F] +\n           HEX_CHARS[(h0 >>> 20) & 0x0F] + HEX_CHARS[(h0 >>> 16) & 0x0F] +\n           HEX_CHARS[(h0 >>> 12) & 0x0F] + HEX_CHARS[(h0 >>> 8) & 0x0F] +\n           HEX_CHARS[(h0 >>> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\n           HEX_CHARS[(h1 >>> 28) & 0x0F] + HEX_CHARS[(h1 >>> 24) & 0x0F] +\n           HEX_CHARS[(h1 >>> 20) & 0x0F] + HEX_CHARS[(h1 >>> 16) & 0x0F] +\n           HEX_CHARS[(h1 >>> 12) & 0x0F] + HEX_CHARS[(h1 >>> 8) & 0x0F] +\n           HEX_CHARS[(h1 >>> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\n           HEX_CHARS[(h2 >>> 28) & 0x0F] + HEX_CHARS[(h2 >>> 24) & 0x0F] +\n           HEX_CHARS[(h2 >>> 20) & 0x0F] + HEX_CHARS[(h2 >>> 16) & 0x0F] +\n           HEX_CHARS[(h2 >>> 12) & 0x0F] + HEX_CHARS[(h2 >>> 8) & 0x0F] +\n           HEX_CHARS[(h2 >>> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\n           HEX_CHARS[(h3 >>> 28) & 0x0F] + HEX_CHARS[(h3 >>> 24) & 0x0F] +\n           HEX_CHARS[(h3 >>> 20) & 0x0F] + HEX_CHARS[(h3 >>> 16) & 0x0F] +\n           HEX_CHARS[(h3 >>> 12) & 0x0F] + HEX_CHARS[(h3 >>> 8) & 0x0F] +\n           HEX_CHARS[(h3 >>> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\n           HEX_CHARS[(h4 >>> 28) & 0x0F] + HEX_CHARS[(h4 >>> 24) & 0x0F] +\n           HEX_CHARS[(h4 >>> 20) & 0x0F] + HEX_CHARS[(h4 >>> 16) & 0x0F] +\n           HEX_CHARS[(h4 >>> 12) & 0x0F] + HEX_CHARS[(h4 >>> 8) & 0x0F] +\n           HEX_CHARS[(h4 >>> 4) & 0x0F] + HEX_CHARS[h4 & 0x0F];\n  };\n\n  Sha1.prototype.toString = Sha1.prototype.hex;\n\n  Sha1.prototype.digest = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4;\n\n    return [\n      (h0 >>> 24) & 0xFF, (h0 >>> 16) & 0xFF, (h0 >>> 8) & 0xFF, h0 & 0xFF,\n      (h1 >>> 24) & 0xFF, (h1 >>> 16) & 0xFF, (h1 >>> 8) & 0xFF, h1 & 0xFF,\n      (h2 >>> 24) & 0xFF, (h2 >>> 16) & 0xFF, (h2 >>> 8) & 0xFF, h2 & 0xFF,\n      (h3 >>> 24) & 0xFF, (h3 >>> 16) & 0xFF, (h3 >>> 8) & 0xFF, h3 & 0xFF,\n      (h4 >>> 24) & 0xFF, (h4 >>> 16) & 0xFF, (h4 >>> 8) & 0xFF, h4 & 0xFF\n    ];\n  };\n\n  Sha1.prototype.array = Sha1.prototype.digest;\n\n  Sha1.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var buffer = new ArrayBuffer(20);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    return buffer;\n  };\n\n  function HmacSha1(key, sharedMemory) {\n    var i, result = formatMessage(key);\n    key = result[0];\n    if (result[1]) {\n      var bytes = [], length = key.length, index = 0, code;\n      for (i = 0; i < length; ++i) {\n        code = key.charCodeAt(i);\n        if (code < 0x80) {\n          bytes[index++] = code;\n        } else if (code < 0x800) {\n          bytes[index++] = (0xc0 | (code >>> 6));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes[index++] = (0xe0 | (code >>> 12));\n          bytes[index++] = (0x80 | ((code >>> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (key.charCodeAt(++i) & 0x3ff));\n          bytes[index++] = (0xf0 | (code >>> 18));\n          bytes[index++] = (0x80 | ((code >>> 12) & 0x3f));\n          bytes[index++] = (0x80 | ((code >>> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        }\n      }\n      key = bytes;\n    }\n\n    if (key.length > 64) {\n      key = (new Sha1(true)).update(key).array();\n    }\n\n    var oKeyPad = [], iKeyPad = [];\n    for (i = 0; i < 64; ++i) {\n      var b = key[i] || 0;\n      oKeyPad[i] = 0x5c ^ b;\n      iKeyPad[i] = 0x36 ^ b;\n    }\n\n    Sha1.call(this, sharedMemory);\n\n    this.update(iKeyPad);\n    this.oKeyPad = oKeyPad;\n    this.inner = true;\n    this.sharedMemory = sharedMemory;\n  }\n  HmacSha1.prototype = new Sha1();\n\n  HmacSha1.prototype.finalize = function () {\n    Sha1.prototype.finalize.call(this);\n    if (this.inner) {\n      this.inner = false;\n      var innerHash = this.array();\n      Sha1.call(this, this.sharedMemory);\n      this.update(this.oKeyPad);\n      this.update(innerHash);\n      Sha1.prototype.finalize.call(this);\n    }\n  };\n\n  var exports = createMethod();\n  exports.sha1 = exports;\n  exports.sha1.hmac = createHmacMethod();\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    root.sha1 = exports;\n    if (AMD) {\n      define(function () {\n        return exports;\n      });\n    }\n  }\n})();\n", "import sha1 from 'js-sha1';\r\n\r\n/**\r\n * \u8BA1\u7B97\u5BF9\u8C61\u7684SHA1\u54C8\u5E0C\u503C\r\n * @param obj \u8981\u8BA1\u7B97\u54C8\u5E0C\u7684\u5BF9\u8C61\r\n * @returns SHA1\u54C8\u5E0C\u5B57\u7B26\u4E32\r\n */\r\nexport function calculateHash(obj: any): string {\r\n  const content = JSON.stringify(obj, Object.keys(obj).sort());\r\n  return sha1(content);\r\n}\r\n\r\n/**\r\n * \u751F\u6210\u552F\u4E00ID\r\n * @param prefix \u524D\u7F00\r\n * @returns \u552F\u4E00ID\u5B57\u7B26\u4E32\r\n */\r\nexport function generateId(prefix: string = ''): string {\r\n  const timestamp = Date.now().toString(36);\r\n  const random = Math.random().toString(36).substr(2, 5);\r\n  return `${prefix}${timestamp}_${random}`;\r\n}\r\n\r\n/**\r\n * \u6DF1\u5EA6\u514B\u9686\u5BF9\u8C61\r\n * @param obj \u8981\u514B\u9686\u7684\u5BF9\u8C61\r\n * @returns \u514B\u9686\u540E\u7684\u5BF9\u8C61\r\n */\r\nexport function deepClone<T>(obj: T): T {\r\n  return JSON.parse(JSON.stringify(obj));\r\n}\r\n\r\n/**\r\n * \u6BD4\u8F83\u4E24\u4E2A\u5BF9\u8C61\u662F\u5426\u76F8\u7B49\r\n * @param obj1 \u5BF9\u8C611\r\n * @param obj2 \u5BF9\u8C612\r\n * @returns \u662F\u5426\u76F8\u7B49\r\n */\r\nexport function deepEqual(obj1: any, obj2: any): boolean {\r\n  return JSON.stringify(obj1, Object.keys(obj1).sort()) === \r\n         JSON.stringify(obj2, Object.keys(obj2).sort());\r\n}\r\n\r\n/**\r\n * \u89E3\u6790\u5355\u5143\u683C\u4F4D\u7F6E\u5B57\u7B26\u4E32\r\n * @param position \u4F4D\u7F6E\u5B57\u7B26\u4E32 \"row,col\"\r\n * @returns \u884C\u5217\u6570\u5B57\r\n */\r\nexport function parsePosition(position: string): { row: number; col: number } {\r\n  const [row, col] = position.split(',').map(Number);\r\n  return { row, col };\r\n}\r\n\r\n/**\r\n * \u683C\u5F0F\u5316\u5355\u5143\u683C\u4F4D\u7F6E\r\n * @param row \u884C\u53F7\r\n * @param col \u5217\u53F7\r\n * @returns \u4F4D\u7F6E\u5B57\u7B26\u4E32\r\n */\r\nexport function formatPosition(row: number, col: number): string {\r\n  return `${row},${col}`;\r\n}\r\n", "import { ObjectType, CellValue, CellFormat } from '../types';\r\nimport { calculateHash } from '../utils/hash';\r\n\r\n/**\r\n * \u5355\u5143\u683C\u5BF9\u8C61 - \u6700\u5C0F\u5B58\u50A8\u7C92\u5EA6\r\n */\r\nexport class CellObject {\r\n  public readonly type = ObjectType.CELL;\r\n  public row: number;\r\n  public column: number;\r\n  public value: CellValue;\r\n  public formula?: string;\r\n  public format?: CellFormat;\r\n  public hash: string;\r\n\r\n  constructor(row: number, column: number, value: CellValue, formula?: string, format?: CellFormat) {\r\n    this.row = row;\r\n    this.column = column;\r\n    this.value = value;\r\n    this.formula = formula;\r\n    this.format = format;\r\n    this.hash = this.calculateHash();\r\n  }\r\n\r\n  private calculateHash(): string {\r\n    return calculateHash({\r\n      type: this.type,\r\n      row: this.row,\r\n      column: this.column,\r\n      value: this.value,\r\n      formula: this.formula,\r\n      format: this.format\r\n    });\r\n  }\r\n\r\n  /**\r\n   * \u66F4\u65B0\u5355\u5143\u683C\u503C\r\n   */\r\n  updateValue(value: CellValue, formula?: string, format?: CellFormat): CellObject {\r\n    return new CellObject(this.row, this.column, value, formula, format);\r\n  }\r\n\r\n  /**\r\n   * \u68C0\u67E5\u662F\u5426\u4E3A\u7A7A\u5355\u5143\u683C\r\n   */\r\n  isEmpty(): boolean {\r\n    return this.value === null || this.value === undefined || this.value === '';\r\n  }\r\n\r\n  /**\r\n   * \u8F6C\u6362\u4E3AJSON\r\n   */\r\n  toJSON(): any {\r\n    return {\r\n      type: this.type,\r\n      row: this.row,\r\n      column: this.column,\r\n      value: this.value,\r\n      formula: this.formula,\r\n      format: this.format,\r\n      hash: this.hash\r\n    };\r\n  }\r\n\r\n  /**\r\n   * \u4ECEJSON\u521B\u5EFA\u5BF9\u8C61\r\n   */\r\n  static fromJSON(json: any): CellObject {\r\n    return new CellObject(\r\n      json.row,\r\n      json.column,\r\n      json.value,\r\n      json.formula,\r\n      json.format\r\n    );\r\n  }\r\n}\r\n", "import { ColumnMetadata, RowMetadata } from '../types';\r\nimport { calculateHash, deepClone } from '../utils/hash';\r\n\r\n/**\r\n * \u8868\u683C\u7ED3\u6784\u7C7B - \u7BA1\u7406\u5217\u548C\u884C\u7684\u5143\u6570\u636E\r\n */\r\nexport class TableStructure {\r\n  public columns: Map<string, ColumnMetadata>;\r\n  public rows: Map<string, RowMetadata>;\r\n  public columnOrder: string[];  // \u5217ID\u7684\u987A\u5E8F\u6570\u7EC4\r\n  public rowOrder: string[];      // \u884CID\u7684\u987A\u5E8F\u6570\u7EC4\r\n  public hash: string;\r\n\r\n  constructor() {\r\n    this.columns = new Map();\r\n    this.rows = new Map();\r\n    this.columnOrder = [];\r\n    this.rowOrder = [];\r\n    this.hash = this.calculateHash();\r\n  }\r\n\r\n  /**\r\n   * \u6DFB\u52A0\u5217\r\n   */\r\n  addColumn(column: ColumnMetadata): void {\r\n    this.columns.set(column.id, deepClone(column));\r\n    \r\n    // \u6309order\u63D2\u5165\u5230\u6B63\u786E\u4F4D\u7F6E\r\n    const insertIndex = this.columnOrder.findIndex(id => {\r\n      const existingColumn = this.columns.get(id);\r\n      return existingColumn && existingColumn.order > column.order;\r\n    });\r\n    \r\n    if (insertIndex === -1) {\r\n      this.columnOrder.push(column.id);\r\n    } else {\r\n      this.columnOrder.splice(insertIndex, 0, column.id);\r\n    }\r\n    \r\n    this.updateHash();\r\n  }\r\n\r\n  /**\r\n   * \u5220\u9664\u5217\r\n   */\r\n  removeColumn(columnId: string): boolean {\r\n    if (this.columns.delete(columnId)) {\r\n      this.columnOrder = this.columnOrder.filter(id => id !== columnId);\r\n      this.updateHash();\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * \u66F4\u65B0\u5217\u4FE1\u606F\r\n   */\r\n  updateColumn(columnId: string, updates: Partial<ColumnMetadata>): boolean {\r\n    const column = this.columns.get(columnId);\r\n    if (column) {\r\n      const updatedColumn = { ...column, ...updates };\r\n      this.columns.set(columnId, updatedColumn);\r\n      this.updateHash();\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * \u79FB\u52A8\u5217\u4F4D\u7F6E\r\n   */\r\n  moveColumn(columnId: string, newIndex: number): boolean {\r\n    const currentIndex = this.columnOrder.indexOf(columnId);\r\n    if (currentIndex === -1 || newIndex < 0 || newIndex >= this.columnOrder.length) {\r\n      return false;\r\n    }\r\n\r\n    // \u79FB\u9664\u5E76\u63D2\u5165\u5230\u65B0\u4F4D\u7F6E\r\n    this.columnOrder.splice(currentIndex, 1);\r\n    this.columnOrder.splice(newIndex, 0, columnId);\r\n    \r\n    // \u66F4\u65B0\u6240\u6709\u5217\u7684order\u5C5E\u6027\r\n    this.updateColumnOrders();\r\n    this.updateHash();\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * \u6DFB\u52A0\u884C\r\n   */\r\n  addRow(row: RowMetadata): void {\r\n    this.rows.set(row.id, deepClone(row));\r\n    \r\n    // \u6309order\u63D2\u5165\u5230\u6B63\u786E\u4F4D\u7F6E\r\n    const insertIndex = this.rowOrder.findIndex(id => {\r\n      const existingRow = this.rows.get(id);\r\n      return existingRow && existingRow.order > row.order;\r\n    });\r\n    \r\n    if (insertIndex === -1) {\r\n      this.rowOrder.push(row.id);\r\n    } else {\r\n      this.rowOrder.splice(insertIndex, 0, row.id);\r\n    }\r\n    \r\n    this.updateHash();\r\n  }\r\n\r\n  /**\r\n   * \u5220\u9664\u884C\r\n   */\r\n  removeRow(rowId: string): boolean {\r\n    if (this.rows.delete(rowId)) {\r\n      this.rowOrder = this.rowOrder.filter(id => id !== rowId);\r\n      this.updateHash();\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * \u6392\u5E8F\u884C\r\n   */\r\n  sortRows(newOrder: string[]): void {\r\n    // \u9A8C\u8BC1\u65B0\u987A\u5E8F\u5305\u542B\u6240\u6709\u73B0\u6709\u884C\r\n    if (newOrder.length === this.rowOrder.length && \r\n        newOrder.every(id => this.rowOrder.includes(id))) {\r\n      this.rowOrder = [...newOrder];\r\n      this.updateRowOrders();\r\n      this.updateHash();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u5217\u4FE1\u606F\r\n   */\r\n  getColumn(columnId: string): ColumnMetadata | undefined {\r\n    return this.columns.get(columnId);\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u884C\u4FE1\u606F\r\n   */\r\n  getRow(rowId: string): RowMetadata | undefined {\r\n    return this.rows.get(rowId);\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u6240\u6709\u5217ID\uFF08\u6309\u987A\u5E8F\uFF09\r\n   */\r\n  getColumnIds(): string[] {\r\n    return [...this.columnOrder];\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u6240\u6709\u884CID\uFF08\u6309\u987A\u5E8F\uFF09\r\n   */\r\n  getRowIds(): string[] {\r\n    return [...this.rowOrder];\r\n  }\r\n\r\n  private updateColumnOrders(): void {\r\n    this.columnOrder.forEach((id, index) => {\r\n      const column = this.columns.get(id);\r\n      if (column) {\r\n        column.order = index;\r\n      }\r\n    });\r\n  }\r\n\r\n  private updateRowOrders(): void {\r\n    this.rowOrder.forEach((id, index) => {\r\n      const row = this.rows.get(id);\r\n      if (row) {\r\n        row.order = index;\r\n      }\r\n    });\r\n  }\r\n\r\n  private updateHash(): void {\r\n    this.hash = this.calculateHash();\r\n  }\r\n\r\n  private calculateHash(): string {\r\n    return calculateHash({\r\n      columns: Array.from(this.columns.entries()),\r\n      rows: Array.from(this.rows.entries()),\r\n      columnOrder: this.columnOrder,\r\n      rowOrder: this.rowOrder\r\n    });\r\n  }\r\n\r\n  /**\r\n   * \u514B\u9686\u7ED3\u6784\r\n   */\r\n  clone(): TableStructure {\r\n    const cloned = new TableStructure();\r\n    cloned.columns = new Map(Array.from(this.columns.entries()).map(([k, v]) => [k, deepClone(v)]));\r\n    cloned.rows = new Map(Array.from(this.rows.entries()).map(([k, v]) => [k, deepClone(v)]));\r\n    cloned.columnOrder = [...this.columnOrder];\r\n    cloned.rowOrder = [...this.rowOrder];\r\n    cloned.updateHash();\r\n    return cloned;\r\n  }\r\n\r\n  /**\r\n   * \u8F6C\u6362\u4E3AJSON\r\n   */\r\n  toJSON(): any {\r\n    return {\r\n      columns: Array.from(this.columns.entries()),\r\n      rows: Array.from(this.rows.entries()),\r\n      columnOrder: this.columnOrder,\r\n      rowOrder: this.rowOrder,\r\n      hash: this.hash\r\n    };\r\n  }\r\n\r\n  /**\r\n   * \u4ECEJSON\u521B\u5EFA\u5BF9\u8C61\r\n   */\r\n  static fromJSON(json: any): TableStructure {\r\n    const structure = new TableStructure();\r\n    structure.columns = new Map(json.columns);\r\n    structure.rows = new Map(json.rows);\r\n    structure.columnOrder = json.columnOrder;\r\n    structure.rowOrder = json.rowOrder;\r\n    structure.updateHash();\r\n    return structure;\r\n  }\r\n}\r\n", "import { ObjectType } from '../types';\r\nimport { TableStructure } from './structure';\r\nimport { calculateHash } from '../utils/hash';\r\nimport { formatPosition, parsePosition } from '../utils/hash';\r\n\r\n/**\r\n * \u5DE5\u4F5C\u8868\u6811\u5BF9\u8C61 - \u7BA1\u7406\u5355\u4E2A\u5DE5\u4F5C\u8868\u7684\u6570\u636E\u548C\u7ED3\u6784\r\n */\r\nexport class SheetTree {\r\n  public readonly type = ObjectType.SHEET;\r\n  public name: string;\r\n  public cells: Map<string, string>;  // \"row,col\" -> cell_hash\r\n  public structure: TableStructure;\r\n  public hash: string;\r\n\r\n  constructor(name: string) {\r\n    this.name = name;\r\n    this.cells = new Map();\r\n    this.structure = new TableStructure();\r\n    this.hash = this.calculateHash();\r\n  }\r\n\r\n  /**\r\n   * \u8BBE\u7F6E\u5355\u5143\u683C\u54C8\u5E0C\r\n   */\r\n  setCellHash(row: number, col: number, hash: string): void {\r\n    const key = formatPosition(row, col);\r\n    this.cells.set(key, hash);\r\n    this.updateHash();\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u5355\u5143\u683C\u54C8\u5E0C\r\n   */\r\n  getCellHash(row: number, col: number): string | undefined {\r\n    const key = formatPosition(row, col);\r\n    return this.cells.get(key);\r\n  }\r\n\r\n  /**\r\n   * \u5220\u9664\u5355\u5143\u683C\r\n   */\r\n  deleteCell(row: number, col: number): boolean {\r\n    const key = formatPosition(row, col);\r\n    const deleted = this.cells.delete(key);\r\n    if (deleted) {\r\n      this.updateHash();\r\n    }\r\n    return deleted;\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u6240\u6709\u5355\u5143\u683C\u4F4D\u7F6E\r\n   */\r\n  getAllCellPositions(): { row: number; col: number }[] {\r\n    return Array.from(this.cells.keys()).map(key => parsePosition(key));\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u6307\u5B9A\u533A\u57DF\u7684\u5355\u5143\u683C\r\n   */\r\n  getCellsInRange(startRow: number, startCol: number, endRow: number, endCol: number): Map<string, string> {\r\n    const result = new Map<string, string>();\r\n    \r\n    for (let row = startRow; row <= endRow; row++) {\r\n      for (let col = startCol; col <= endCol; col++) {\r\n        const hash = this.getCellHash(row, col);\r\n        if (hash) {\r\n          result.set(formatPosition(row, col), hash);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * \u6E05\u7A7A\u6240\u6709\u5355\u5143\u683C\r\n   */\r\n  clearAllCells(): void {\r\n    this.cells.clear();\r\n    this.updateHash();\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u5DE5\u4F5C\u8868\u8FB9\u754C\r\n   */\r\n  getBounds(): { minRow: number; maxRow: number; minCol: number; maxCol: number } | null {\r\n    if (this.cells.size === 0) {\r\n      return null;\r\n    }\r\n\r\n    let minRow = Infinity, maxRow = -Infinity;\r\n    let minCol = Infinity, maxCol = -Infinity;\r\n\r\n    for (const key of this.cells.keys()) {\r\n      const { row, col } = parsePosition(key);\r\n      minRow = Math.min(minRow, row);\r\n      maxRow = Math.max(maxRow, row);\r\n      minCol = Math.min(minCol, col);\r\n      maxCol = Math.max(maxCol, col);\r\n    }\r\n\r\n    return { minRow, maxRow, minCol, maxCol };\r\n  }\r\n\r\n  /**\r\n   * \u63D2\u5165\u884C\uFF08\u5728\u6307\u5B9A\u884C\u4E4B\u524D\u63D2\u5165\uFF09\r\n   */\r\n  insertRowBefore(targetRow: number): void {\r\n    const newCells = new Map<string, string>();\r\n    \r\n    for (const [key, hash] of this.cells) {\r\n      const { row, col } = parsePosition(key);\r\n      const newRow = row >= targetRow ? row + 1 : row;\r\n      newCells.set(formatPosition(newRow, col), hash);\r\n    }\r\n    \r\n    this.cells = newCells;\r\n    this.updateHash();\r\n  }\r\n\r\n  /**\r\n   * \u63D2\u5165\u5217\uFF08\u5728\u6307\u5B9A\u5217\u4E4B\u524D\u63D2\u5165\uFF09\r\n   */\r\n  insertColumnBefore(targetCol: number): void {\r\n    const newCells = new Map<string, string>();\r\n    \r\n    for (const [key, hash] of this.cells) {\r\n      const { row, col } = parsePosition(key);\r\n      const newCol = col >= targetCol ? col + 1 : col;\r\n      newCells.set(formatPosition(row, newCol), hash);\r\n    }\r\n    \r\n    this.cells = newCells;\r\n    this.updateHash();\r\n  }\r\n\r\n  /**\r\n   * \u5220\u9664\u884C\r\n   */\r\n  deleteRow(targetRow: number): void {\r\n    const newCells = new Map<string, string>();\r\n    \r\n    for (const [key, hash] of this.cells) {\r\n      const { row, col } = parsePosition(key);\r\n      if (row === targetRow) {\r\n        continue; // \u8DF3\u8FC7\u8981\u5220\u9664\u7684\u884C\r\n      }\r\n      const newRow = row > targetRow ? row - 1 : row;\r\n      newCells.set(formatPosition(newRow, col), hash);\r\n    }\r\n    \r\n    this.cells = newCells;\r\n    this.updateHash();\r\n  }\r\n\r\n  /**\r\n   * \u5220\u9664\u5217\r\n   */\r\n  deleteColumn(targetCol: number): void {\r\n    const newCells = new Map<string, string>();\r\n    \r\n    for (const [key, hash] of this.cells) {\r\n      const { row, col } = parsePosition(key);\r\n      if (col === targetCol) {\r\n        continue; // \u8DF3\u8FC7\u8981\u5220\u9664\u7684\u5217\r\n      }\r\n      const newCol = col > targetCol ? col - 1 : col;\r\n      newCells.set(formatPosition(row, newCol), hash);\r\n    }\r\n    \r\n    this.cells = newCells;\r\n    this.updateHash();\r\n  }\r\n\r\n  private updateHash(): void {\r\n    this.hash = this.calculateHash();\r\n  }\r\n\r\n  private calculateHash(): string {\r\n    return calculateHash({\r\n      type: this.type,\r\n      name: this.name,\r\n      cells: Array.from(this.cells.entries()),\r\n      structure: this.structure.hash\r\n    });\r\n  }\r\n\r\n  /**\r\n   * \u514B\u9686\u5DE5\u4F5C\u8868\r\n   */\r\n  clone(): SheetTree {\r\n    const cloned = new SheetTree(this.name);\r\n    cloned.cells = new Map(this.cells);\r\n    cloned.structure = this.structure.clone();\r\n    cloned.updateHash();\r\n    return cloned;\r\n  }\r\n\r\n  /**\r\n   * \u8F6C\u6362\u4E3AJSON\r\n   */\r\n  toJSON(): any {\r\n    return {\r\n      type: this.type,\r\n      name: this.name,\r\n      cells: Array.from(this.cells.entries()),\r\n      structure: this.structure.toJSON(),\r\n      hash: this.hash\r\n    };\r\n  }\r\n\r\n  /**\r\n   * \u4ECEJSON\u521B\u5EFA\u5BF9\u8C61\r\n   */\r\n  static fromJSON(json: any): SheetTree {\r\n    const sheet = new SheetTree(json.name);\r\n    sheet.cells = new Map(json.cells);\r\n    sheet.structure = TableStructure.fromJSON(json.structure);\r\n    sheet.updateHash();\r\n    return sheet;\r\n  }\r\n}\r\n", "import { ObjectType } from '../types';\r\nimport { calculateHash } from '../utils/hash';\r\n\r\n/**\r\n * \u63D0\u4EA4\u5BF9\u8C61 - \u8868\u793A\u4E00\u6B21\u63D0\u4EA4\u7684\u5B8C\u6574\u4FE1\u606F\r\n */\r\nexport class CommitObject {\r\n  public readonly type = ObjectType.COMMIT;\r\n  public tree: string;  // \u6307\u5411\u6839\u6811\u5BF9\u8C61\u7684\u54C8\u5E0C\r\n  public parent?: string;  // \u7236\u63D0\u4EA4\u54C8\u5E0C\r\n  public author: string;\r\n  public email: string;\r\n  public message: string;\r\n  public timestamp: number;\r\n  public hash: string;\r\n\r\n  constructor(tree: string, message: string, author: string, email: string, parent?: string) {\r\n    this.tree = tree;\r\n    this.message = message;\r\n    this.author = author;\r\n    this.email = email;\r\n    this.parent = parent;\r\n    this.timestamp = Date.now();\r\n    this.hash = this.calculateHash();\r\n  }\r\n\r\n  private calculateHash(): string {\r\n    return calculateHash({\r\n      type: this.type,\r\n      tree: this.tree,\r\n      parent: this.parent,\r\n      author: this.author,\r\n      email: this.email,\r\n      message: this.message,\r\n      timestamp: this.timestamp\r\n    });\r\n  }\r\n\r\n  /**\r\n   * \u68C0\u67E5\u662F\u5426\u4E3A\u521D\u59CB\u63D0\u4EA4\r\n   */\r\n  isInitialCommit(): boolean {\r\n    return this.parent === undefined || this.parent === '';\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u7B80\u77ED\u54C8\u5E0C\r\n   */\r\n  getShortHash(): string {\r\n    return this.hash.substring(0, 7);\r\n  }\r\n\r\n  /**\r\n   * \u683C\u5F0F\u5316\u63D0\u4EA4\u4FE1\u606F\r\n   */\r\n  format(): string {\r\n    const date = new Date(this.timestamp).toLocaleString();\r\n    return `${this.getShortHash()} ${this.message}\\nAuthor: ${this.author} <${this.email}>\\nDate: ${date}`;\r\n  }\r\n\r\n  /**\r\n   * \u8F6C\u6362\u4E3AJSON\r\n   */\r\n  toJSON(): any {\r\n    return {\r\n      type: this.type,\r\n      tree: this.tree,\r\n      parent: this.parent,\r\n      author: this.author,\r\n      email: this.email,\r\n      message: this.message,\r\n      timestamp: this.timestamp,\r\n      hash: this.hash\r\n    };\r\n  }\r\n\r\n  /**\r\n   * \u4ECEJSON\u521B\u5EFA\u5BF9\u8C61\r\n   */\r\n  static fromJSON(json: any): CommitObject {\r\n    const commit = new CommitObject(\r\n      json.tree,\r\n      json.message,\r\n      json.author,\r\n      json.email,\r\n      json.parent\r\n    );\r\n    commit.timestamp = json.timestamp;\r\n    commit.hash = json.hash;\r\n    return commit;\r\n  }\r\n}\r\n", "import { \r\n  ChangeType, \r\n  Change, \r\n  DiffResult, \r\n  ColumnMetadata, \r\n  RowMetadata, \r\n  SortCriteria,\r\n  CellValue,\r\n  CellFormat,\r\n  ObjectType\r\n} from '../types';\r\nimport { CellObject } from './cell';\r\nimport { SheetTree } from './sheet';\r\nimport { CommitObject } from './commit';\r\nimport { TableStructure } from './structure';\r\nimport { deepClone, generateId } from '../utils/hash';\r\n\r\n/**\r\n * \u8868\u683C\u7248\u672C\u63A7\u5236\u5F15\u64CE - Git \u98CE\u683C\u7684\u8868\u683C\u7248\u672C\u63A7\u5236\u7CFB\u7EDF\r\n */\r\nexport class TableGit {\r\n  private objects: Map<string, any>;  // \u5BF9\u8C61\u5B58\u50A8\r\n  private refs: Map<string, string>;  // \u5206\u652F\u5F15\u7528\r\n  private head: string;  // \u5F53\u524D\u5206\u652F\r\n  private index: Map<string, Change>;  // \u6682\u5B58\u533A\r\n  private workingTree: Map<string, SheetTree>;  // \u5DE5\u4F5C\u533A\r\n\r\n  constructor() {\r\n    this.objects = new Map();\r\n    this.refs = new Map();\r\n    this.head = 'main';\r\n    this.index = new Map();\r\n    this.workingTree = new Map();\r\n  }\r\n\r\n  /**\r\n   * \u521D\u59CB\u5316\u4ED3\u5E93\r\n   */\r\n  init(branchName: string = 'main'): void {\r\n    this.head = branchName;\r\n    this.refs.set(branchName, '');\r\n    \r\n    // \u521B\u5EFA\u521D\u59CB\u7A7A\u63D0\u4EA4\r\n    const emptyTree = new SheetTree('default');\r\n    const treeHash = this.storeObject(emptyTree);\r\n    \r\n    const initialCommit = new CommitObject(\r\n      treeHash,\r\n      'Initial commit',\r\n      'System',\r\n      'system@tablegit.com'\r\n    );\r\n    \r\n    const commitHash = this.storeObject(initialCommit);\r\n    this.refs.set(branchName, commitHash);\r\n    \r\n    // \u52A0\u8F7D\u5DE5\u4F5C\u533A\r\n    this.loadWorkingTree();\r\n  }\r\n\r\n  // ========== \u5355\u5143\u683C\u64CD\u4F5C ==========\r\n\r\n  /**\r\n   * \u6DFB\u52A0\u6216\u66F4\u65B0\u5355\u5143\u683C\r\n   */\r\n  addCellChange(\r\n    sheetName: string, \r\n    row: number, \r\n    column: number, \r\n    value: CellValue, \r\n    formula?: string, \r\n    format?: CellFormat\r\n  ): void {\r\n    const cell = new CellObject(row, column, value, formula, format);\r\n    const changeKey = `${sheetName}:cell:${row},${column}`;\r\n    \r\n    this.index.set(changeKey, {\r\n      type: ChangeType.CELL_UPDATE,\r\n      sheetName,\r\n      details: cell,\r\n      timestamp: Date.now()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * \u5220\u9664\u5355\u5143\u683C\r\n   */\r\n  deleteCellChange(sheetName: string, row: number, column: number): void {\r\n    const changeKey = `${sheetName}:cell:${row},${column}`;\r\n    \r\n    this.index.set(changeKey, {\r\n      type: ChangeType.CELL_DELETE,\r\n      sheetName,\r\n      details: { row, column },\r\n      timestamp: Date.now()\r\n    });\r\n  }\r\n\r\n  // ========== \u5217\u64CD\u4F5C ==========\r\n\r\n  /**\r\n   * \u6DFB\u52A0\u5217\r\n   */\r\n  addColumn(sheetName: string, column: ColumnMetadata): void {\r\n    const changeKey = `${sheetName}:column:add:${column.id}`;\r\n    \r\n    this.index.set(changeKey, {\r\n      type: ChangeType.COLUMN_ADD,\r\n      sheetName,\r\n      details: column,\r\n      timestamp: Date.now()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * \u66F4\u65B0\u5217\u4FE1\u606F\r\n   */\r\n  updateColumn(sheetName: string, columnId: string, updates: Partial<ColumnMetadata>): void {\r\n    const changeKey = `${sheetName}:column:update:${columnId}`;\r\n    \r\n    this.index.set(changeKey, {\r\n      type: ChangeType.COLUMN_UPDATE,\r\n      sheetName,\r\n      details: { columnId, updates },\r\n      timestamp: Date.now()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * \u5220\u9664\u5217\r\n   */\r\n  deleteColumn(sheetName: string, columnId: string): void {\r\n    const changeKey = `${sheetName}:column:delete:${columnId}`;\r\n    \r\n    this.index.set(changeKey, {\r\n      type: ChangeType.COLUMN_DELETE,\r\n      sheetName,\r\n      details: { columnId },\r\n      timestamp: Date.now()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * \u79FB\u52A8\u5217\u4F4D\u7F6E\r\n   */\r\n  moveColumn(sheetName: string, columnId: string, newIndex: number): void {\r\n    const changeKey = `${sheetName}:column:move:${columnId}`;\r\n    \r\n    this.index.set(changeKey, {\r\n      type: ChangeType.COLUMN_MOVE,\r\n      sheetName,\r\n      details: { columnId, newIndex },\r\n      timestamp: Date.now()\r\n    });\r\n  }\r\n\r\n  // ========== \u884C\u64CD\u4F5C ==========\r\n\r\n  /**\r\n   * \u6DFB\u52A0\u884C\r\n   */\r\n  addRow(sheetName: string, row: RowMetadata): void {\r\n    const changeKey = `${sheetName}:row:add:${row.id}`;\r\n    \r\n    this.index.set(changeKey, {\r\n      type: ChangeType.ROW_ADD,\r\n      sheetName,\r\n      details: row,\r\n      timestamp: Date.now()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * \u5220\u9664\u884C\r\n   */\r\n  deleteRow(sheetName: string, rowId: string): void {\r\n    const changeKey = `${sheetName}:row:delete:${rowId}`;\r\n    \r\n    this.index.set(changeKey, {\r\n      type: ChangeType.ROW_DELETE,\r\n      sheetName,\r\n      details: { rowId },\r\n      timestamp: Date.now()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * \u6392\u5E8F\u884C\r\n   */\r\n  sortRows(sheetName: string, sortCriteria: SortCriteria[]): void {\r\n    const changeKey = `${sheetName}:row:sort:${Date.now()}`;\r\n    \r\n    this.index.set(changeKey, {\r\n      type: ChangeType.ROW_SORT,\r\n      sheetName,\r\n      details: { sortCriteria },\r\n      timestamp: Date.now()\r\n    });\r\n  }\r\n\r\n  // ========== \u7248\u672C\u63A7\u5236\u6838\u5FC3\u64CD\u4F5C ==========\r\n\r\n  /**\r\n   * \u63D0\u4EA4\u53D8\u66F4\r\n   */\r\n  commit(message: string, author: string, email: string): string {\r\n    if (this.index.size === 0) {\r\n      throw new Error('Nothing to commit');\r\n    }\r\n\r\n    // \u6784\u5EFA\u65B0\u7684\u6811\u5BF9\u8C61\r\n    const newTree = this.buildTreeFromIndex();\r\n    const treeHash = this.storeObject(newTree);\r\n    \r\n    // \u83B7\u53D6\u5F53\u524D\u63D0\u4EA4\r\n    const currentCommitHash = this.refs.get(this.head);\r\n    \r\n    // \u521B\u5EFA\u65B0\u63D0\u4EA4\r\n    const commit = new CommitObject(\r\n      treeHash,\r\n      message,\r\n      author,\r\n      email,\r\n      currentCommitHash\r\n    );\r\n    \r\n    const commitHash = this.storeObject(commit);\r\n    \r\n    // \u66F4\u65B0\u5F15\u7528\r\n    this.refs.set(this.head, commitHash);\r\n    \r\n    // \u6E05\u7A7A\u6682\u5B58\u533A\r\n    this.index.clear();\r\n    \r\n    // \u91CD\u65B0\u52A0\u8F7D\u5DE5\u4F5C\u533A\r\n    this.loadWorkingTree();\r\n    \r\n    return commitHash;\r\n  }\r\n\r\n  /**\r\n   * \u4ECE\u6682\u5B58\u533A\u6784\u5EFA\u6811\u5BF9\u8C61\r\n   */\r\n  private buildTreeFromIndex(): SheetTree {\r\n    // \u4ECE\u5F53\u524D\u5DE5\u4F5C\u533A\u83B7\u53D6\u57FA\u7840\u6811\uFF0C\u5982\u679C\u4E0D\u5B58\u5728\u5219\u521B\u5EFA\u65B0\u7684\r\n    let sheet = this.workingTree.get('default')?.clone() || new SheetTree('default');\r\n    \r\n    // \u5E94\u7528\u6240\u6709\u6682\u5B58\u7684\u53D8\u66F4\r\n    for (const [key, change] of this.index) {\r\n      this.applyChange(sheet, change);\r\n    }\r\n    \r\n    return sheet;\r\n  }\r\n\r\n  /**\r\n   * \u5E94\u7528\u5355\u4E2A\u53D8\u66F4\r\n   */\r\n  private applyChange(sheet: SheetTree, change: Change): void {\r\n    switch (change.type) {\r\n      case ChangeType.CELL_UPDATE:\r\n      case ChangeType.CELL_ADD:\r\n        const cell = change.details as CellObject;\r\n        const cellHash = this.storeObject(cell);\r\n        sheet.setCellHash(cell.row, cell.column, cellHash);\r\n        break;\r\n        \r\n      case ChangeType.CELL_DELETE:\r\n        const { row, column } = change.details;\r\n        sheet.deleteCell(row, column);\r\n        break;\r\n        \r\n      case ChangeType.COLUMN_ADD:\r\n        sheet.structure.addColumn(change.details as ColumnMetadata);\r\n        break;\r\n        \r\n      case ChangeType.COLUMN_UPDATE:\r\n        const { columnId, updates } = change.details;\r\n        sheet.structure.updateColumn(columnId, updates);\r\n        break;\r\n        \r\n      case ChangeType.COLUMN_DELETE:\r\n        sheet.structure.removeColumn(change.details.columnId);\r\n        break;\r\n        \r\n      case ChangeType.COLUMN_MOVE:\r\n        sheet.structure.moveColumn(change.details.columnId, change.details.newIndex);\r\n        break;\r\n        \r\n      case ChangeType.ROW_ADD:\r\n        sheet.structure.addRow(change.details as RowMetadata);\r\n        break;\r\n        \r\n      case ChangeType.ROW_DELETE:\r\n        sheet.structure.removeRow(change.details.rowId);\r\n        break;\r\n        \r\n      case ChangeType.ROW_SORT:\r\n        // \u8FD9\u91CC\u53EF\u4EE5\u5B9E\u73B0\u5177\u4F53\u7684\u6392\u5E8F\u903B\u8F91\r\n        const { sortCriteria } = change.details;\r\n        this.applySorting(sheet, sortCriteria);\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u5E94\u7528\u6392\u5E8F\r\n   */\r\n  private applySorting(sheet: SheetTree, criteria: SortCriteria[]): void {\r\n    // \u83B7\u53D6\u5F53\u524D\u884C\u987A\u5E8F\r\n    const currentOrder = sheet.structure.getRowIds();\r\n    \r\n    // \u8FD9\u91CC\u5E94\u8BE5\u6839\u636E\u5355\u5143\u683C\u6570\u636E\u8FDB\u884C\u6392\u5E8F\r\n    // \u4E3A\u7B80\u5316\uFF0C\u8FD9\u91CC\u53EA\u662F\u91CD\u65B0\u6392\u5217\u884CID\r\n    const sortedOrder = [...currentOrder].sort((a, b) => {\r\n      // \u5B9E\u9645\u6392\u5E8F\u903B\u8F91\u5E94\u8BE5\u6839\u636E\u5355\u5143\u683C\u5185\u5BB9\u8FDB\u884C\r\n      return a.localeCompare(b);\r\n    });\r\n    \r\n    sheet.structure.sortRows(sortedOrder);\r\n  }\r\n\r\n  // ========== \u5BF9\u8C61\u5B58\u50A8 ==========\r\n\r\n  /**\r\n   * \u5B58\u50A8\u5BF9\u8C61\r\n   */\r\n  private storeObject(obj: any): string {\r\n    const hash = obj.hash;\r\n    this.objects.set(hash, obj);\r\n    return hash;\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u5BF9\u8C61\r\n   */\r\n  private getObject(hash: string): any {\r\n    return this.objects.get(hash);\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u6307\u5B9A\u5F15\u7528\uFF08\u5206\u652F\u6216\u63D0\u4EA4\uFF09\u5BF9\u5E94\u7684\u5DE5\u4F5C\u8868\u5FEB\u7167\uFF0C\u800C\u4E0D\u6539\u53D8\u5F53\u524D\u5DE5\u4F5C\u533A\r\n   */\r\n  getTreeSnapshot(ref?: { branch?: string; commit?: string }): SheetTree | undefined {\r\n    let commitHash: string | undefined;\r\n    if (ref?.commit) {\r\n      commitHash = ref.commit;\r\n    } else if (ref?.branch) {\r\n      commitHash = this.refs.get(ref.branch);\r\n    } else {\r\n      // \u9ED8\u8BA4\u4E3A\u5F53\u524D HEAD\r\n      commitHash = this.refs.get(this.head) || (this.isDetachedHead() ? this.head : undefined);\r\n    }\r\n\r\n    if (!commitHash) return undefined;\r\n\r\n    const commit = this.getObject(commitHash) as CommitObject | undefined;\r\n    if (!commit) return undefined;\r\n    const tree = this.getObject(commit.tree) as SheetTree | undefined;\r\n    return tree ? tree.clone() : undefined;\r\n  }\r\n\r\n  /**\r\n   * \u4ECE\u6307\u5B9A\u7684 SheetTree \u5FEB\u7167\u8BFB\u53D6\u5355\u5143\u683C\u5BF9\u8C61\r\n   */\r\n  getCellFromTree(tree: SheetTree, row: number, col: number): CellObject | undefined {\r\n    const hash = tree.getCellHash(row, col);\r\n    if (!hash) return undefined;\r\n    return this.getObject(hash) as CellObject;\r\n  }\r\n\r\n  // ========== \u5206\u652F\u64CD\u4F5C ==========\r\n\r\n  /**\r\n   * \u521B\u5EFA\u5206\u652F\r\n   */\r\n  createBranch(branchName: string): void {\r\n    const currentCommitHash = this.refs.get(this.head);\r\n    if (currentCommitHash) {\r\n      this.refs.set(branchName, currentCommitHash);\r\n    } else {\r\n      throw new Error('Cannot create branch: no commits found');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u5207\u6362\u5206\u652F\u6216\u63D0\u4EA4\r\n   */\r\n  checkout(target: string): void {\r\n    if (this.index.size > 0) {\r\n      throw new Error('Cannot checkout: you have unstaged changes');\r\n    }\r\n    \r\n    // \u68C0\u67E5\u662F\u5426\u662F\u5206\u652F\u540D\r\n    if (this.refs.has(target)) {\r\n      this.head = target;\r\n      this.loadWorkingTree();\r\n      return;\r\n    }\r\n    \r\n    // \u68C0\u67E5\u662F\u5426\u662F\u63D0\u4EA4\u54C8\u5E0C\r\n    const commit = this.getObject(target);\r\n    if (commit && commit.type === ObjectType.COMMIT) {\r\n      // \u5207\u6362\u5230\u5206\u79BBHEAD\u72B6\u6001\r\n      this.head = target;\r\n      this.loadWorkingTreeFromCommit(target);\r\n      return;\r\n    }\r\n    \r\n    throw new Error(`Branch or commit '${target}' does not exist`);\r\n  }\r\n\r\n  /**\r\n   * \u4ECE\u6307\u5B9A\u63D0\u4EA4\u52A0\u8F7D\u5DE5\u4F5C\u533A\r\n   */\r\n  private loadWorkingTreeFromCommit(commitHash: string): void {\r\n    const commit = this.getObject(commitHash) as CommitObject;\r\n    if (commit) {\r\n      const tree = this.getObject(commit.tree) as SheetTree;\r\n      if (tree) {\r\n        this.workingTree.set('default', tree.clone());\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u5F53\u524D\u5206\u652F\r\n   */\r\n  getCurrentBranch(): string {\r\n    return this.head;\r\n  }\r\n\r\n  /**\r\n   * \u68C0\u67E5\u5F53\u524D\u662F\u5426\u5904\u4E8E\u5206\u79BBHEAD\u72B6\u6001\r\n   */\r\n  isDetachedHead(): boolean {\r\n    return !this.refs.has(this.head);\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u5F53\u524DHEAD\u6307\u5411\u7684\u63D0\u4EA4\u54C8\u5E0C\r\n   */\r\n  getCurrentCommitHash(): string | undefined {\r\n    if (this.isDetachedHead()) {\r\n      return this.head; // \u5206\u79BBHEAD\u72B6\u6001\u4E0B\uFF0Chead\u76F4\u63A5\u662F\u63D0\u4EA4\u54C8\u5E0C\r\n    }\r\n    return this.refs.get(this.head);\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u6240\u6709\u5206\u652F\r\n   */\r\n  getBranches(): string[] {\r\n    return Array.from(this.refs.keys());\r\n  }\r\n\r\n  /**\r\n   * \u52A0\u8F7D\u5DE5\u4F5C\u533A\r\n   */\r\n  private loadWorkingTree(): void {\r\n    const commitHash = this.refs.get(this.head);\r\n    if (commitHash) {\r\n      const commit = this.getObject(commitHash) as CommitObject;\r\n      if (commit) {\r\n        const tree = this.getObject(commit.tree) as SheetTree;\r\n        if (tree) {\r\n          this.workingTree.set('default', tree.clone());\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // ========== \u72B6\u6001\u67E5\u8BE2 ==========\r\n\r\n  /**\r\n   * \u83B7\u53D6\u5F53\u524D\u72B6\u6001\r\n   */\r\n  status(): {\r\n    branch: string;\r\n    stagedChanges: number;\r\n    lastCommit?: string;\r\n  } {\r\n    const lastCommitHash = this.refs.get(this.head);\r\n    return {\r\n      branch: this.head,\r\n      stagedChanges: this.index.size,\r\n      lastCommit: lastCommitHash ? this.getObject(lastCommitHash)?.getShortHash() : undefined\r\n    };\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u6682\u5B58\u533A\u53D8\u66F4\r\n   */\r\n  getStagedChanges(): Change[] {\r\n    return Array.from(this.index.values());\r\n  }\r\n\r\n  /**\r\n   * \u91CD\u7F6E\u6682\u5B58\u533A\r\n   */\r\n  reset(): void {\r\n    this.index.clear();\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u63D0\u4EA4\u5386\u53F2\r\n   */\r\n  getCommitHistory(limit: number = 10): CommitObject[] {\r\n    const history: CommitObject[] = [];\r\n    let currentHash = this.refs.get(this.head);\r\n    \r\n    while (currentHash && history.length < limit) {\r\n      const commit = this.getObject(currentHash) as CommitObject;\r\n      if (!commit) break;\r\n      \r\n      history.push(commit);\r\n      currentHash = commit.parent;\r\n    }\r\n    \r\n    return history;\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u5DE5\u4F5C\u533A\u5185\u5BB9\r\n   */\r\n  getWorkingTree(): SheetTree | undefined {\r\n    return this.workingTree.get('default');\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u5355\u5143\u683C\u503C\r\n   */\r\n  getCellValue(row: number, col: number): CellValue | undefined {\r\n    const sheet = this.workingTree.get('default');\r\n    if (!sheet) return undefined;\r\n    \r\n    const cellHash = sheet.getCellHash(row, col);\r\n    if (!cellHash) return undefined;\r\n    \r\n    const cell = this.getObject(cellHash) as CellObject;\r\n    return cell?.value;\r\n  }\r\n\r\n  /**\r\n   * \u83B7\u53D6\u5355\u5143\u683C\u5BF9\u8C61\r\n   */\r\n  getCell(row: number, col: number): CellObject | undefined {\r\n    const sheet = this.workingTree.get('default');\r\n    if (!sheet) return undefined;\r\n    \r\n    const cellHash = sheet.getCellHash(row, col);\r\n    if (!cellHash) return undefined;\r\n    \r\n    return this.getObject(cellHash) as CellObject;\r\n  }\r\n\r\n\r\n}\r\n", "import { TableGit } from '../core/table-git';\r\nimport { CellObject } from '../core/cell';\r\nimport { ColumnMetadata, RowMetadata, CellValue, CellFormat } from '../types';\r\nimport { generateId } from './hash';\r\n\r\n/**\r\n * \u521B\u5EFA\u8868\u683CGit\u5B9E\u4F8B\u7684\u4FBF\u5229\u51FD\u6570\r\n */\r\nexport function createTableGit(branchName: string = 'main'): TableGit {\r\n  const tableGit = new TableGit();\r\n  tableGit.init(branchName);\r\n  return tableGit;\r\n}\r\n\r\n/**\r\n * \u521B\u5EFA\u5355\u5143\u683C\u7684\u4FBF\u5229\u51FD\u6570\r\n */\r\nexport function createCell(\r\n  row: number,\r\n  column: number,\r\n  value: CellValue,\r\n  formula?: string,\r\n  format?: CellFormat\r\n): CellObject {\r\n  return new CellObject(row, column, value, formula, format);\r\n}\r\n\r\n/**\r\n * \u521B\u5EFA\u5217\u5143\u6570\u636E\u7684\u4FBF\u5229\u51FD\u6570\r\n */\r\nexport function createColumn(\r\n  id?: string,\r\n  options: {\r\n    description?: string;\r\n    dataType?: 'string' | 'number' | 'date' | 'boolean' | 'mixed';\r\n    width?: number;\r\n    hidden?: boolean;\r\n    order?: number;\r\n    constraints?: {\r\n      required?: boolean;\r\n      unique?: boolean;\r\n      pattern?: string;\r\n      min?: number;\r\n      max?: number;\r\n    };\r\n  } = {}\r\n): ColumnMetadata {\r\n  return {\r\n    id: id || generateId('col_'),\r\n    description: options.description,\r\n    dataType: options.dataType || 'mixed',\r\n    width: options.width || 100,\r\n    hidden: options.hidden || false,\r\n    order: options.order || 0,\r\n    constraints: options.constraints\r\n  };\r\n}\r\n\r\n/**\r\n * \u521B\u5EFA\u884C\u5143\u6570\u636E\u7684\u4FBF\u5229\u51FD\u6570\r\n */\r\nexport function createRow(\r\n  options: {\r\n    id?: string;\r\n    height?: number;\r\n    hidden?: boolean;\r\n    order?: number;\r\n  } = {}\r\n): RowMetadata {\r\n  return {\r\n    id: options.id || generateId('row_'),\r\n    height: options.height || 25,\r\n    hidden: options.hidden || false,\r\n    order: options.order || 0\r\n  };\r\n}\r\n\r\n/**\r\n * \u521B\u5EFA\u5305\u542B\u793A\u4F8B\u6570\u636E\u7684\u8868\u683C\r\n */\r\nexport function createSampleTable(): TableGit {\r\n  const repo = createTableGit();\r\n  \r\n  // \u6DFB\u52A0\u5217\u5B9A\u4E49 - \u53EA\u9700\u8981id\uFF0C\u4E0D\u9700\u8981name\r\n  const columns = [\r\n    createColumn('product_name', { \r\n      dataType: 'string', \r\n      width: 150, \r\n      order: 0,\r\n      constraints: { required: true }\r\n    }),\r\n    createColumn('price', { \r\n      dataType: 'number', \r\n      width: 100, \r\n      order: 1,\r\n      constraints: { required: true, min: 0 }\r\n    }),\r\n    createColumn('stock', { \r\n      dataType: 'number', \r\n      width: 100, \r\n      order: 2\r\n    }),\r\n    createColumn('description', { \r\n      dataType: 'string', \r\n      width: 200, \r\n      order: 3\r\n    })\r\n  ];\r\n  \r\n  // \u6DFB\u52A0\u5217\u5230\u8868\u683C\r\n  columns.forEach(col => repo.addColumn('default', col));\r\n  \r\n  // \u7B2C0\u884C\u4F5C\u4E3A\u5217\u5934\uFF0C\u548C\u666E\u901A\u5355\u5143\u683C\u4E00\u6837\u5904\u7406\r\n  repo.addCellChange('default', 0, 0, '\u4EA7\u54C1\u540D\u79F0', undefined, { fontWeight: 'bold' });\r\n  repo.addCellChange('default', 0, 1, '\u4EF7\u683C', undefined, { fontWeight: 'bold' });\r\n  repo.addCellChange('default', 0, 2, '\u5E93\u5B58', undefined, { fontWeight: 'bold' });\r\n  repo.addCellChange('default', 0, 3, '\u63CF\u8FF0', undefined, { fontWeight: 'bold' });\r\n  \r\n  // \u6DFB\u52A0\u6570\u636E\u884C\r\n  repo.addCellChange('default', 1, 0, 'iPhone 15');\r\n  repo.addCellChange('default', 1, 1, 5999);\r\n  repo.addCellChange('default', 1, 2, 100);\r\n  repo.addCellChange('default', 1, 3, '\u6700\u65B0\u6B3EiPhone');\r\n  \r\n  repo.addCellChange('default', 2, 0, 'MacBook Pro');\r\n  repo.addCellChange('default', 2, 1, 12999);\r\n  repo.addCellChange('default', 2, 2, 50);\r\n  repo.addCellChange('default', 2, 3, '\u4E13\u4E1A\u7EA7\u7B14\u8BB0\u672C\u7535\u8111');\r\n  \r\n  repo.addCellChange('default', 3, 0, 'iPad Air');\r\n  repo.addCellChange('default', 3, 1, 4599);\r\n  repo.addCellChange('default', 3, 2, 75);\r\n  repo.addCellChange('default', 3, 3, '\u8F7B\u8584\u5E73\u677F\u7535\u8111');\r\n  \r\n  // \u63D0\u4EA4\u521D\u59CB\u6570\u636E\r\n  repo.commit('\u521D\u59CB\u5316\u4EA7\u54C1\u8868', 'System', 'system@example.com');\r\n  \r\n  return repo;\r\n}\r\n", "import { TableGit } from '../core/table-git';\r\nimport { SheetTree } from '../core/sheet';\r\nimport { TableData } from './types';\r\nimport { parsePosition } from '../utils/hash';\r\n\r\n// \u5C06\u4ED3\u5E93\u5F53\u524D\u5DE5\u4F5C\u533A\u7684\u6570\u636E\u8F6C\u6362\u6210\u7EDF\u4E00\u7684 TableData\r\nexport class TableDataAdapter {\r\n  constructor(private readonly repo: TableGit, private readonly sheetName: string = 'default') {}\r\n\r\n  /**\r\n   * \u6784\u5EFA\u7EDF\u4E00\u6570\u636E\r\n   * @param source \u53EF\u9009\uFF1A\u4ECE\u5176\u4ED6\u5206\u652F\u6216\u6307\u5B9A\u63D0\u4EA4\u9884\u89C8\uFF08\u4E0D\u9700\u8981 checkout\uFF09\r\n   */\r\n  build(source?: { branch?: string; commit?: string }): TableData {\r\n    const sheet: SheetTree | undefined = source ? this.repo.getTreeSnapshot(source) : this.repo.getWorkingTree();\r\n    if (!sheet) {\r\n      return { header: [], rows: [], matrix: [], minRow: 0, minCol: 0, maxRow: -1, maxCol: -1 };\r\n    }\r\n\r\n    // \u8BA1\u7B97\u8FB9\u754C\r\n    const bounds = sheet.getBounds();\r\n    if (!bounds) {\r\n      return { header: [], rows: [], matrix: [], minRow: 0, minCol: 0, maxRow: -1, maxCol: -1 };\r\n    }\r\n\r\n    const { minRow, minCol, maxRow, maxCol } = bounds;\r\n\r\n    // \u6784\u9020\u77E9\u9635\r\n    const matrix: any[][] = [];\r\n    for (let r = minRow; r <= maxRow; r++) {\r\n      const row: any[] = [];\r\n      for (let c = minCol; c <= maxCol; c++) {\r\n        const hash = sheet.getCellHash(r, c);\r\n        if (!hash) {\r\n          row.push(undefined);\r\n        } else {\r\n          // \u76F4\u63A5\u901A\u8FC7\u5BF9\u8C61\u5B58\u50A8\u8FD8\u539F\u503C\uFF1A\u7531\u4E8E TableGit.getCell \u8BFB\u53D6\u7684\u662F\u5F53\u524D\u5DE5\u4F5C\u533A\uFF0C\r\n          // \u5F53\u6211\u4EEC\u505A\u5386\u53F2/\u5206\u652F\u9884\u89C8\u65F6\u5E94\u4ECE\u5FEB\u7167 tree \u4E2D\u53CD\u67E5 cell \u5BF9\u8C61\u3002\r\n          const cell = this.repo.getCellFromTree(sheet, r, c);\r\n          row.push(cell ? cell.value : undefined);\r\n        }\r\n      }\r\n      matrix.push(row);\r\n    }\r\n\r\n    const header = (minRow === 0 && matrix.length > 0) ? (matrix[0] as any[]) : [];\r\n    const rows = (minRow === 0) ? matrix.slice(1) : matrix;\r\n\r\n    return { header, rows, matrix, minRow, minCol, maxRow, maxCol };\r\n  }\r\n}\r\n", "import { FormatterFunction, TableData } from './types';\r\n\r\nexport interface FunctionFormatterOptions<TOptions = any> {\r\n  name: string;\r\n  format: FormatterFunction<TOptions, string>;\r\n  defaults?: TOptions;\r\n}\r\n\r\n// \u7B80\u5355\u7684\u51FD\u6570\u5F0F\u683C\u5F0F\u5316\u5668\u5305\u88C5\u5668\r\nexport class FunctionFormatter<TOptions = any> {\r\n  readonly name: string;\r\n  private readonly fn: FormatterFunction<TOptions, string>;\r\n  private readonly defaults?: TOptions;\r\n\r\n  constructor(options: FunctionFormatterOptions<TOptions>) {\r\n    this.name = options.name;\r\n    this.fn = options.format;\r\n    this.defaults = options.defaults;\r\n  }\r\n\r\n  run(data: TableData, options?: Partial<TOptions>): string {\r\n    const finalOptions = { ...(this.defaults as any), ...(options as any) } as TOptions;\r\n    return this.fn(data, finalOptions);\r\n  }\r\n}\r\n\r\n// \u4E00\u4E2A\u7B80\u5355\u7684\u6CE8\u518C\u4E2D\u5FC3\uFF0C\u652F\u6301\u7528\u6237\u6CE8\u518C\u81EA\u5B9A\u4E49\u51FD\u6570\u5F0F\u683C\u5F0F\r\nexport class FormatterRegistry {\r\n  private registry = new Map<string, FunctionFormatter<any>>();\r\n\r\n  register(formatter: FunctionFormatter<any>) {\r\n    this.registry.set(formatter.name, formatter);\r\n  }\r\n\r\n  unregister(name: string) {\r\n    this.registry.delete(name);\r\n  }\r\n\r\n  list(): string[] {\r\n    return [...this.registry.keys()];\r\n  }\r\n\r\n  format(name: string, data: TableData, options?: any): string {\r\n    const f = this.registry.get(name);\r\n    if (!f) throw new Error(`Formatter '${name}' is not registered`);\r\n    return f.run(data, options);\r\n  }\r\n}\r\n", "import { FormatterFunction, TableData } from './types';\r\n\r\n// CSV \u683C\u5F0F\u5316\r\nexport interface CsvOptions {\r\n  delimiter?: string; // \u9ED8\u8BA4\u4E3A ,\r\n  newline?: string;   // \u9ED8\u8BA4\u4E3A \\n\r\n  // \u662F\u5426\u5305\u542B\u8868\u5934\uFF08\u82E5\u5B58\u5728\uFF09\r\n  includeHeader?: boolean;\r\n  // \u6587\u672C\u662F\u5426\u9700\u8981\u5F15\u53F7\u5305\u88F9\r\n  quoteText?: boolean;\r\n}\r\n\r\nfunction escapeCsvValue(val: any, delimiter: string, quoteText: boolean): string {\r\n  if (val === null || val === undefined) return '';\r\n  const str = typeof val === 'string' ? val : String(val);\r\n  const mustQuote = quoteText || str.includes(delimiter) || /[\\r\\n]/.test(str) || str.includes('\"');\r\n  if (!mustQuote) return str;\r\n  return '\"' + str.replace(/\"/g, '\"\"') + '\"';\r\n}\r\n\r\nexport const csvFormatter: FormatterFunction<CsvOptions, string> = (data, options) => {\r\n  const delimiter = options?.delimiter ?? ',';\r\n  const newline = options?.newline ?? '\\n';\r\n  const includeHeader = options?.includeHeader ?? true;\r\n  const quoteText = options?.quoteText ?? false;\r\n\r\n  const lines: string[] = [];\r\n  if (includeHeader && data.header.length) {\r\n    lines.push(data.header.map(v => escapeCsvValue(v, delimiter, quoteText)).join(delimiter));\r\n  }\r\n  for (const row of data.rows) {\r\n    lines.push((row ?? []).map(v => escapeCsvValue(v, delimiter, quoteText)).join(delimiter));\r\n  }\r\n  return lines.join(newline);\r\n};\r\n\r\n// JSON \u683C\u5F0F\u5316\r\nexport interface JsonOptions {\r\n  space?: number;\r\n  // \u8F93\u51FA\u5BF9\u8C61\u5F62\u72B6\uFF1Amatrix | rows | detailed\r\n  shape?: 'matrix' | 'rows' | 'detailed';\r\n}\r\n\r\nexport const jsonFormatter: FormatterFunction<JsonOptions, string> = (data, options) => {\r\n  const space = options?.space ?? 2;\r\n  const shape = options?.shape ?? 'rows';\r\n\r\n  let payload: any;\r\n  switch (shape) {\r\n    case 'matrix':\r\n      payload = data.matrix;\r\n      break;\r\n    case 'detailed':\r\n      payload = data;\r\n      break;\r\n    case 'rows':\r\n    default:\r\n      payload = {\r\n        header: data.header,\r\n        rows: data.rows\r\n      };\r\n      break;\r\n  }\r\n  return JSON.stringify(payload, null, space);\r\n};\r\n\r\n// HTML \u8868\u683C\u683C\u5F0F\u5316\r\nexport interface HtmlOptions {\r\n  tableClass?: string;\r\n  includeHeader?: boolean;\r\n  escapeHtml?: boolean;\r\n}\r\n\r\nfunction escapeHtml(s: any): string {\r\n  if (s === null || s === undefined) return '';\r\n  return String(s)\r\n    .replace(/&/g, '&amp;')\r\n    .replace(/</g, '&lt;')\r\n    .replace(/>/g, '&gt;')\r\n    .replace(/\"/g, '&quot;')\r\n    .replace(/'/g, '&#039;');\r\n}\r\n\r\nexport const htmlFormatter: FormatterFunction<HtmlOptions, string> = (data, options) => {\r\n  const tableClass = options?.tableClass ?? 'table-git';\r\n  const includeHeader = options?.includeHeader ?? true;\r\n  const esc = options?.escapeHtml ?? true;\r\n\r\n  const escVal = (v: any) => (esc ? escapeHtml(v) : (v ?? ''));\r\n\r\n  const parts: string[] = [];\r\n  parts.push(`<table class=\"${tableClass}\">`);\r\n  if (includeHeader && data.header.length) {\r\n    parts.push('<thead><tr>');\r\n    for (const h of data.header) parts.push(`<th>${escVal(h)}</th>`);\r\n    parts.push('</tr></thead>');\r\n  }\r\n  parts.push('<tbody>');\r\n  for (const row of data.rows) {\r\n    parts.push('<tr>');\r\n    for (const cell of (row ?? [])) parts.push(`<td>${escVal(cell)}</td>`);\r\n    parts.push('</tr>');\r\n  }\r\n  parts.push('</tbody></table>');\r\n  return parts.join('');\r\n};\r\n", "import {\r\n\tcreateSampleTable,\r\n\tTableGit,\r\n\tTableDataAdapter,\r\n\tFunctionFormatter,\r\n\tFormatterRegistry,\r\n\tcsvFormatter,\r\n\tjsonFormatter,\r\n\thtmlFormatter,\r\n} from '../src/index.ts';\r\n\r\ntype El = HTMLElement | null;\r\nconst $ = (id: string) => document.getElementById(id);\r\n\r\nlet repo: TableGit | null = null;\r\nconst registry = new FormatterRegistry();\r\nregistry.register(new FunctionFormatter({ name: 'csv', format: csvFormatter }));\r\nregistry.register(new FunctionFormatter({ name: 'json', format: jsonFormatter }));\r\nregistry.register(new FunctionFormatter({ name: 'html', format: htmlFormatter }));\r\n\r\nfunction setText(el: El, text: string) { if (el) el.textContent = text; }\r\nfunction setHTML(el: El, html: string) { if (el) el.innerHTML = html; }\r\nfunction escapeHtml(s: any) {\r\n\tif (s === null || s === undefined) return '';\r\n\treturn String(s)\r\n\t\t.replace(/&/g, '&amp;')\r\n\t\t.replace(/</g, '&lt;')\r\n\t\t.replace(/>/g, '&gt;')\r\n\t\t.replace(/\"/g, '&quot;')\r\n\t\t.replace(/'/g, '&#039;');\r\n}\r\nfunction renderList(elId: string, items: string[]) {\r\n\tconst el = $(elId);\r\n\tif (!el) return;\r\n\tconst html = `<ul class=\"list\">${items.map(i => `<li>${escapeHtml(i)}</li>`).join('')}</ul>`;\r\n\tsetHTML(el, html);\r\n}\r\n\r\nfunction refreshAll() {\r\n\tif (!repo) return;\r\n\t// status\r\n\tconst s = repo.status();\r\n\tsetText($(\"status\"), `\u5206\u652F: ${s.branch}, \u6682\u5B58: ${s.stagedChanges}, \u6700\u540E\u63D0\u4EA4: ${s.lastCommit || '\u65E0'}`);\r\n\r\n\t// columns\r\n\tconst tree = repo.getWorkingTree();\r\n\tif (tree) {\r\n\t\t\tconst cols = tree.structure.getColumnIds().map((id, i) => {\r\n\t\t\tconst c = tree.structure.getColumn(id)!;\r\n\t\t\tconst name = (c as any).name || id; // \u6211\u4EEC\u7684 ColumnMetadata \u6CA1\u6709 name \u5B57\u6BB5\uFF0C\u8FD9\u91CC\u5411\u540E\u517C\u5BB9\r\n\t\t\t\treturn `${name} (${c.dataType}) width=${c.width}`;\r\n\t\t});\r\n\t\t\trenderList('columns', cols);\r\n\t}\r\n\r\n\t// branches\r\n\tconst branches = repo.getBranches();\r\n\tconst current = repo.getCurrentBranch();\r\n\t\t\t// \u5206\u652F\u5217\u8868\uFF1A\u9644\u5E26\u9884\u89C8\u6309\u94AE\r\n\t\t\t{\r\n\t\t\t\tconst lines = branches.map(b => {\r\n\t\t\t\t\tconst label = `${b === current ? '\u2605 ' : ''}${b}`;\r\n\t\t\t\t\tconst id = `preview-branch-${b}`;\r\n\t\t\t\t\treturn `<span>${escapeHtml(label)}</span> <button data-preview-branch=\"${escapeHtml(b)}\" class=\"mini\">\u9884\u89C8</button>`;\r\n\t\t\t\t});\r\n\t\t\t\tconst el = $(\"branches\");\r\n\t\t\t\tif (el) {\r\n\t\t\t\t\tsetHTML(el, `<ul class=\"list\">${lines.map(li => `<li>${li}</li>`).join('')}</ul>`);\r\n\t\t\t\t\t// \u7ED1\u5B9A\u4E8B\u4EF6\r\n\t\t\t\t\tel.querySelectorAll('button[data-preview-branch]').forEach(btn => {\r\n\t\t\t\t\t\tbtn.addEventListener('click', () => {\r\n\t\t\t\t\t\t\tconst branch = (btn as HTMLButtonElement).getAttribute('data-preview-branch')!;\r\n\t\t\t\t\t\t\tpreviewFrom({ branch }, `\u5206\u652F: ${branch}`);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t// history\r\n\tconst hist = repo.getCommitHistory(10);\r\n\t\t\t// \u5386\u53F2\u63D0\u4EA4\uFF1A\u9644\u5E26\u9884\u89C8\u6309\u94AE\r\n\t\t\t{\r\n\t\t\t\tconst lines = hist.map((c) => {\r\n\t\t\t\t\tconst label = `${c.getShortHash()} - ${c.message}`;\r\n\t\t\t\t\treturn `<span>${escapeHtml(label)}</span> <button data-preview-commit=\"${escapeHtml(c.hash)}\" class=\"mini\">\u9884\u89C8</button>`;\r\n\t\t\t\t});\r\n\t\t\t\tconst el = $(\"history\");\r\n\t\t\t\tif (el) {\r\n\t\t\t\t\tsetHTML(el, `<ul class=\"list\">${lines.map(li => `<li>${li}</li>`).join('')}</ul>`);\r\n\t\t\t\t\tel.querySelectorAll('button[data-preview-commit]').forEach(btn => {\r\n\t\t\t\t\t\tbtn.addEventListener('click', () => {\r\n\t\t\t\t\t\t\tconst commit = (btn as HTMLButtonElement).getAttribute('data-preview-commit')!;\r\n\t\t\t\t\t\t\tpreviewFrom({ commit }, `\u63D0\u4EA4: ${commit.substring(0,7)}`);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t// grid\r\n\trenderGrid();\r\n\t// preview\r\n\trefreshPreview();\r\n}\r\n\r\nfunction renderGrid() {\r\n\tif (!repo) return;\r\n\tconst tree = repo.getWorkingTree();\r\n\tif (!tree) { setHTML($(\"grid\"), '(\u7A7A)'); return; }\r\n\r\n\t// \u7C97\u7565\u6E32\u67D3\u77E9\u9635\uFF08\u5305\u542B\u8868\u5934\uFF09\r\n\tconst adapter = new TableDataAdapter(repo);\r\n\tconst data = adapter.build();\r\n\tconst rows = data.matrix;\r\n\tconst html = [`<table>`]\r\n\tif (data.header.length) {\r\n\t\thtml.push('<thead><tr>');\r\n\t\thtml.push(...data.header.map(h => `<th>${h ?? ''}</th>`));\r\n\t\thtml.push('</tr></thead>');\r\n\t}\r\n\thtml.push('<tbody>');\r\n\tfor (const row of (data.header.length ? data.rows : rows)) {\r\n\t\thtml.push('<tr>');\r\n\t\thtml.push(...(row ?? []).map(cell => `<td>${cell ?? ''}</td>`));\r\n\t\thtml.push('</tr>');\r\n\t}\r\n\thtml.push('</tbody></table>');\r\n\tsetHTML($(\"grid\"), html.join(''));\r\n}\r\n\r\nfunction refreshPreview() {\r\n\tif (!repo) return;\r\n\tconst adapter = new TableDataAdapter(repo);\r\n\tconst data = adapter.build();\r\n\tconst html = registry.format('html', data, { includeHeader: true });\r\n\tconst csv = registry.format('csv', data, { includeHeader: true, quoteText: true });\r\n\tconst json = registry.format('json', data, { shape: 'rows', space: 2 });\r\n\tsetText($(\"previewFrom\"), '\u9884\u89C8\u6765\u6E90\uFF1A\u5F53\u524D\u5DE5\u4F5C\u533A');\r\n\r\n\t// HTML -> iframe\r\n\tconst doc = (document.getElementById('htmlFrame') as HTMLIFrameElement).contentWindow?.document;\r\n\tif (doc) {\r\n\t\tdoc.open();\r\n\t\tdoc.write(`<!doctype html><meta charset='utf-8'><style>table{border-collapse:collapse}th,td{border:1px solid #ddd;padding:6px}</style>${html}`);\r\n\t\tdoc.close();\r\n\t}\r\n\tsetText($(\"csvOut\"), csv);\r\n\tsetText($(\"jsonOut\"), json);\r\n}\r\n\r\n\t// \u57FA\u4E8E\u5206\u652F/\u63D0\u4EA4\u7684\u4E34\u65F6\u9884\u89C8\uFF08\u4E0D\u5F71\u54CD\u5F53\u524D\u5DE5\u4F5C\u533A\uFF09\r\n\tfunction previewFrom(source: { branch?: string; commit?: string }, label: string) {\r\n\t\tif (!repo) return;\r\n\t\t\tconst adapter = new TableDataAdapter(repo);\r\n\t\t\tconst data = adapter.build(source);\r\n\t\tconst html = registry.format('html', data, { includeHeader: true });\r\n\t\tconst csv = registry.format('csv', data, { includeHeader: true, quoteText: true });\r\n\t\tconst json = registry.format('json', data, { shape: 'rows', space: 2 });\r\n\r\n\t\tsetText($(\"previewFrom\"), `\u9884\u89C8\u6765\u6E90\uFF1A${label}`);\r\n\r\n\t\tconst doc = (document.getElementById('htmlFrame') as HTMLIFrameElement).contentWindow?.document;\r\n\t\tif (doc) { doc.open(); doc.write(`<!doctype html><meta charset='utf-8'><style>table{border-collapse:collapse}th,td{border:1px solid #ddd;padding:6px}</style>${html}`); doc.close(); }\r\n\t\tsetText($(\"csvOut\"), csv);\r\n\t\tsetText($(\"jsonOut\"), json);\r\n\t}\r\n\r\nfunction bindTabs() {\r\n\tconst buttons = Array.from(document.querySelectorAll('.tabs button')) as HTMLButtonElement[];\r\n\tconst panels: Record<string, HTMLElement> = {\r\n\t\thtml: document.getElementById('panel-html')!,\r\n\t\tcsv: document.getElementById('panel-csv')!,\r\n\t\tjson: document.getElementById('panel-json')!,\r\n\t};\r\n\tbuttons.forEach(btn => {\r\n\t\tbtn.addEventListener('click', () => {\r\n\t\t\tbuttons.forEach(b => b.classList.remove('active'));\r\n\t\t\tbtn.classList.add('active');\r\n\t\t\tconst tab = btn.getAttribute('data-tab')!;\r\n\t\t\tObject.entries(panels).forEach(([k, el]) => el.style.display = (k === tab ? 'block' : 'none'));\r\n\t\t});\r\n\t});\r\n}\r\n\r\nfunction bindActions() {\r\n\t($(\"btn-init\") as HTMLButtonElement).onclick = () => { repo = createSampleTable(); refreshAll(); };\r\n\t($(\"btn-commit\") as HTMLButtonElement).onclick = () => {\r\n\t\tif (!repo) return;\r\n\t\tconst author = (document.getElementById('author') as HTMLInputElement).value || 'Demo User';\r\n\t\tconst email = (document.getElementById('email') as HTMLInputElement).value || 'demo@example.com';\r\n\t\tconst message = (document.getElementById('message') as HTMLInputElement).value || '\u6F14\u793A\u63D0\u4EA4';\r\n\t\ttry { repo.commit(message, author, email); } catch (e) { console.warn(e); }\r\n\t\trefreshAll();\r\n\t};\r\n\t($(\"btn-create-branch\") as HTMLButtonElement).onclick = () => { if (!repo) return; const b = (document.getElementById('branch') as HTMLInputElement).value || 'temp'; repo.createBranch(b); refreshAll(); };\r\n\t($(\"btn-checkout\") as HTMLButtonElement).onclick = () => { if (!repo) return; const b = (document.getElementById('branch') as HTMLInputElement).value || 'main'; try { repo.checkout(b); } catch(e) { console.warn(e); } refreshAll(); };\r\n\t($(\"btn-back-main\") as HTMLButtonElement).onclick = () => { if (!repo) return; try { repo.checkout('main'); } catch(e) { console.warn(e); } refreshAll(); };\r\n\r\n\t// \u4E1A\u52A1\u64CD\u4F5C\u53C2\u8003 demo.js\r\n\t($(\"btn-adjust\") as HTMLButtonElement).onclick = () => {\r\n\t\tif (!repo) return;\r\n\t\trepo.addCellChange('default', 1, 2, 6999);\r\n\t\trepo.addCellChange('default', 2, 2, 13999);\r\n\t\ttry { repo.commit('\u8C03\u6574\u4EA7\u54C1\u4EF7\u683C', 'Sales Manager', 'sales@company.com'); } catch(e) {}\r\n\t\trefreshAll();\r\n\t};\r\n\r\n\t($(\"btn-delete-row\") as HTMLButtonElement).onclick = () => {\r\n\t\tif (!repo) return;\r\n\t\t// \u6DFB\u52A0\u884C\u5143\u6570\u636E->\u5220\u9664\u7B2C2\u884C\r\n\t\trepo.addRow('default', { id: 'row_2', height: 25, hidden: false, order: 1 });\r\n\t\ttry { repo.commit('\u6DFB\u52A0\u884C\u5143\u6570\u636E', 'Data Manager', 'data@company.com'); } catch(e) {}\r\n\t\trepo.deleteCellChange('default', 2, 1);\r\n\t\trepo.deleteCellChange('default', 2, 2);\r\n\t\trepo.deleteCellChange('default', 2, 3);\r\n\t\trepo.deleteCellChange('default', 2, 4);\r\n\t\trepo.deleteRow('default', 'row_2');\r\n\t\ttry { repo.commit('\u5220\u9664MacBook Pro\u4EA7\u54C1\u884C', 'Product Manager', 'pm@company.com'); } catch(e) {}\r\n\t\trefreshAll();\r\n\t};\r\n\r\n\t($(\"btn-add-more\") as HTMLButtonElement).onclick = () => {\r\n\t\tif (!repo) return;\r\n\t\trepo.addCellChange('default', 4, 1, 'Apple Watch');\r\n\t\trepo.addCellChange('default', 4, 2, 2999);\r\n\t\trepo.addCellChange('default', 4, 3, 200);\r\n\t\trepo.addCellChange('default', 4, 4, '\u667A\u80FD\u624B\u8868');\r\n\t\trepo.addCellChange('default', 5, 1, 'AirPods Pro');\r\n\t\trepo.addCellChange('default', 5, 2, 1999);\r\n\t\trepo.addCellChange('default', 5, 3, 150);\r\n\t\trepo.addCellChange('default', 5, 4, '\u65E0\u7EBF\u8033\u673A');\r\n\t\ttry { repo.commit('\u6DFB\u52A0\u66F4\u591A\u4EA7\u54C1', 'Product Manager', 'pm@company.com'); } catch(e) {}\r\n\t\trefreshAll();\r\n\t};\r\n\r\n\t($(\"btn-sort\") as HTMLButtonElement).onclick = () => { if (!repo) return; repo.sortRows('default', [{ columnId: 'col_2', ascending: true }]); try { repo.commit('\u6309\u4EF7\u683C\u6392\u5E8F\u4EA7\u54C1', 'Data Analyst', 'analyst@company.com'); } catch(e) {} refreshAll(); };\r\n\r\n\t($(\"btn-checkout-prev\") as HTMLButtonElement).onclick = () => {\r\n\t\tif (!repo) return;\r\n\t\tconst history = repo.getCommitHistory(10);\r\n\t\tif (history.length >= 2) {\r\n\t\t\tconst oldCommit = history[history.length - 2];\r\n\t\t\ttry { repo.checkout(oldCommit.hash); } catch(e) {}\r\n\t\t\trefreshAll();\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction main() {\r\n\tbindTabs();\r\n\tbindActions();\r\n\t// \u81EA\u52A8\u521D\u59CB\u5316\u4E00\u6B21\r\n\trepo = createSampleTable();\r\n\trefreshAll();\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', main);\r\n\r\n"],
  "mappings": "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",
  "names": ["Buffer", "blocks", "exports", "sha1", "repo", "repo", "escapeHtml"]
}
